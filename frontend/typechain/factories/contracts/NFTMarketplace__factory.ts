/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  NFTMarketplace,
  NFTMarketplaceInterface,
} from "../../contracts/NFTMarketplace";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "AlreadyListed",
    type: "error",
  },
  {
    inputs: [],
    name: "AlreadyOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "NotApprovedForMarketplace",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "NotListed",
    type: "error",
  },
  {
    inputs: [],
    name: "NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "NotToRedeem",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "PriceMustBeAboveZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "PriceNotMet",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "ItemBought",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "ItemCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "ItemListed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
    ],
    name: "ItemRedeemed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "buyItem",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "cancelListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "listItem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "attestation",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "redeemItem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "attestation",
        type: "bytes",
      },
    ],
    name: "redeemItem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "updateListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506001600055338061003c57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6100458161004b565b5061009d565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6111a3806100ac6000396000f3fe6080604052600436106100865760003560e01c80638da5cb5b116100595780638da5cb5b146101025780639f37092a1461012e578063b2ddee0614610141578063f2fde38b14610161578063f772adf11461018157600080fd5b806366bb2ca01461008b5780636f36fd1a146100ad578063715018a6146100cd57806389bfd38f146100e2575b600080fd5b34801561009757600080fd5b506100ab6100a6366004610f57565b6101a1565b005b3480156100b957600080fd5b506100ab6100c8366004610fd7565b610377565b3480156100d957600080fd5b506100ab610412565b3480156100ee57600080fd5b506100ab6100fd366004611030565b610426565b34801561010e57600080fd5b50600154604080516001600160a01b039092168252519081900360200190f35b6100ab61013c366004611065565b6106e4565b34801561014d57600080fd5b506100ab61015c366004611065565b610a71565b34801561016d57600080fd5b506100ab61017c366004611091565b610bfc565b34801561018d57600080fd5b506100ab61019c366004611030565b610c3a565b6101a9610df6565b6001600160a01b038085166000908152600360209081526040808320878452825291829020825180840190935280548416835260010154909216918101829052859185913391821461020e5760405163480ed11960e11b815260040160405180910390fd5b6001600160a01b0380891660009081526003602090815260408083208b84529091529020600181015490911633146102995760405162461bcd60e51b815260206004820152602360248201527f596f7520617265206e6f7420746865206275796572206f66207468697320746f60448201526235b2b760e91b60648201526084015b60405180910390fd5b604051635cbfac9760e11b81526001600160a01b038a169063b97f592e906102c7908a908a906004016110fb565b600060405180830381600087803b1580156102e157600080fd5b505af11580156102f5573d6000803e3d6000fd5b5050506001600160a01b038a1660008181526003602090815260408083208d845290915280822080546001600160a01b03199081168255600190910180549091169055513393508b92917f34a804b87c7fb8850678b583d7aeebcb661f1da1b6fcd6bad87262b132d00d4e91a450505050506103716001600055565b50505050565b61037f610df6565b6001600160a01b03808416600090815260036020908152604080832086845282529182902082518084019093528054841683526001015490921691810182905284918491339182146103e45760405163480ed11960e11b815260040160405180910390fd5b6103ff878787604051806020016040528060008152506101a1565b5050505061040d6001600055565b505050565b61041a610e20565b6104246000610e4d565b565b6001600160a01b0380841660009081526002602090815260408083208684528252918290208251808401909352805490931682526001909201549181018290528491849133911561049c57604051634a5568d560e01b81526001600160a01b038516600482015260248101849052604401610290565b6040516331a9108f60e11b81526004810187905287908790339083906000906001600160a01b03831690636352211e90602401602060405180830381865afa1580156104ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105109190611129565b9050806001600160a01b0316836001600160a01b031614610544576040516330cd747160e01b815260040160405180910390fd5b60008a116105655760405163e1abbfc560e01b815260040160405180910390fd5b60405163020604bf60e21b8152600481018c90528c9030906001600160a01b0383169063081812fc90602401602060405180830381865afa1580156105ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d29190611129565b6001600160a01b0316146105f957604051634be3a2c560e01b815260040160405180910390fd5b6040518060400160405280336001600160a01b031681526020018c815250600260008f6001600160a01b03166001600160a01b0316815260200190815260200160002060008e815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060208201518160010155905050336001600160a01b03168c8e6001600160a01b03167fb29a3c5d9c9eb8230bd277c54293a0a15e98cd5592a3e0d470fe9ce59fed54f18e6040516106cd91815260200190565b60405180910390a450505050505050505050505050565b6001600160a01b038083166000908152600260209081526040808320858452825291829020825180840190935280549093168252600190920154918101829052839183919061075857604051631a0c522360e21b81526001600160a01b038416600482015260248101839052604401610290565b6040516331a9108f60e11b81526004810185905285908590339083906000906001600160a01b03831690636352211e90602401602060405180830381865afa1580156107a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107cc9190611129565b9050806001600160a01b0316836001600160a01b0316036108005760405163600acf0760e11b815260040160405180910390fd5b610808610df6565b6001600160a01b03808b1660009081526002602090815260408083208d845282529182902082518084019093528054909316825260019092015491810182905290341015610888576020810151604051637c93456560e01b81526001600160a01b038d166004820152602481018c90526044810191909152606401610290565b80516001600160a01b0316600090815260046020526040812080543492906108b1908490611146565b909155505080516040516001600160a01b03909116903480156108fc02916000818181858888f193505050501580156108ee573d6000803e3d6000fd5b50604051806040016040528082600001516001600160a01b03168152602001336001600160a01b0316815250600360008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550905050600260008c6001600160a01b03166001600160a01b0316815260200190815260200160002060008b8152602001908152602001600020600080820160006101000a8154906001600160a01b03021916905560018201600090555050336001600160a01b03168a8c6001600160a01b03167f3e54435e36ae559863863c86ae49ae6974ff464d5ccf01c2aae2254c9131b1a68460200151604051610a5291815260200190565b60405180910390a450610a656001600055565b50505050505050505050565b6040516331a9108f60e11b81526004810182905282908290339083906000906001600160a01b03831690636352211e90602401602060405180830381865afa158015610ac1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae59190611129565b9050806001600160a01b0316836001600160a01b031614610b19576040516330cd747160e01b815260040160405180910390fd5b6001600160a01b0380881660009081526002602090815260408083208a84528252918290208251808401909352805490931682526001909201549181018290528891889190610b8d57604051631a0c522360e21b81526001600160a01b038416600482015260248101839052604401610290565b6001600160a01b038a1660008181526002602090815260408083208d845290915280822080546001600160a01b03191681556001018290555133928c9290917fc448b641f9d136b2082a1543ddddd8b6f8b86576bc444a187505ea3934bac2f89190a450505050505050505050565b610c04610e20565b6001600160a01b038116610c2e57604051631e4fbdf760e01b815260006004820152602401610290565b610c3781610e4d565b50565b6001600160a01b0380841660009081526002602090815260408083208684528252918290208251808401909352805490931682526001909201549181018290528491849190610cae57604051631a0c522360e21b81526001600160a01b038416600482015260248101839052604401610290565b610cb6610df6565b6040516331a9108f60e11b81526004810186905286908690339083906000906001600160a01b03831690636352211e90602401602060405180830381865afa158015610d06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2a9190611129565b9050806001600160a01b0316836001600160a01b031614610d5e576040516330cd747160e01b815260040160405180910390fd5b88600003610d7f5760405163e1abbfc560e01b815260040160405180910390fd5b6001600160a01b038b1660008181526002602090815260408083208e84528252918290206001018c905590518b815233928d9290917fb29a3c5d9c9eb8230bd277c54293a0a15e98cd5592a3e0d470fe9ce59fed54f1910160405180910390a45050505050610dee6001600055565b505050505050565b600260005403610e1957604051633ee5aeb560e01b815260040160405180910390fd5b6002600055565b6001546001600160a01b031633146104245760405163118cdaa760e01b8152336004820152602401610290565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0381168114610c3757600080fd5b634e487b7160e01b600052604160045260246000fd5b600082601f830112610edb57600080fd5b813567ffffffffffffffff80821115610ef657610ef6610eb4565b604051601f8301601f19908116603f01168101908282118183101715610f1e57610f1e610eb4565b81604052838152866020858801011115610f3757600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060808587031215610f6d57600080fd5b8435610f7881610e9f565b935060208501359250604085013567ffffffffffffffff80821115610f9c57600080fd5b610fa888838901610eca565b93506060870135915080821115610fbe57600080fd5b50610fcb87828801610eca565b91505092959194509250565b600080600060608486031215610fec57600080fd5b8335610ff781610e9f565b925060208401359150604084013567ffffffffffffffff81111561101a57600080fd5b61102686828701610eca565b9150509250925092565b60008060006060848603121561104557600080fd5b833561105081610e9f565b95602085013595506040909401359392505050565b6000806040838503121561107857600080fd5b823561108381610e9f565b946020939093013593505050565b6000602082840312156110a357600080fd5b81356110ae81610e9f565b9392505050565b6000815180845260005b818110156110db576020818501810151868301820152016110bf565b506000602082860101526020601f19601f83011685010191505092915050565b60408152600061110e60408301856110b5565b828103602084015261112081856110b5565b95945050505050565b60006020828403121561113b57600080fd5b81516110ae81610e9f565b8082018082111561116757634e487b7160e01b600052601160045260246000fd5b9291505056fea2646970667358221220f5c2105c69343006605aa7fdb8e383709a8116839cc54a297ea69ac3cf19485964736f6c63430008140033";

type NFTMarketplaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTMarketplaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTMarketplace__factory extends ContractFactory {
  constructor(...args: NFTMarketplaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      NFTMarketplace & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): NFTMarketplace__factory {
    return super.connect(runner) as NFTMarketplace__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTMarketplaceInterface {
    return new Interface(_abi) as NFTMarketplaceInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): NFTMarketplace {
    return new Contract(address, _abi, runner) as unknown as NFTMarketplace;
  }
}
